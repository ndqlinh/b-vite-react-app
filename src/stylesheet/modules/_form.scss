.form-group {
  @include pxRem(margin-bottom, 15);
  display: flex;
  justify-content: center;
  flex-direction: column;
  .input-wrapper {
    display: flex;
    align-items: center;
    position: relative;
  }
  .input {
    @include pxRem(padding, 12 20 12 48);
    @include pxRem(border-radius, 5);
    @include pxRem(font-size, map-get($font-size, normal));
    width: 100%;
    border: 1px solid map-get($color, border);
    outline: none;
    transition: .5s ease;
    &::placeholder {
      color: map-get($color, "grey");
    }
    &:focus, &:hover {
      outline: none;
      border-color: map-get($color, "blue");
      box-shadow: 0 0 0 5px rgba($color: map-get($color, "blue"), $alpha: 0.3);
    }
  }
  .icon {
    @include pxRem(left, 16);
    @include pxRem(font-size, 20);
    display: flex;
    align-items: center;
    position: absolute;
  }
  .error-msg {
    @include pxRem(margin-top, 5);
  }
}

// Custom checkbox style
.checkbox {
  input[type="checkbox"] {
    display: none;
    visibility: hidden;
    &:checked + .checkbox-label {
      span:first-child {
        background: map-get($color, "blue");
        border-color: map-get($color, "blue");
        animation: checkbox-wave 0.4s ease;
        svg {
          stroke-dashoffset: 0;
        }
        &::before {
          transform: scale(3.5);
          opacity: 0;
          transition: all 0.6s ease;
        }
      }
    }
  }
  .checkbox-label {
    margin: auto;
    user-select: none;
    cursor: pointer;
    span {
      display: inline-block;
      vertical-align: middle;
      transform: translate3d(0, 0, 0);
      &:first-child {
        @include pxRem(width, 18);
        @include pxRem(height, 18);
        @include pxRem(border-radius, 3);
        position: relative;
        transform: scale(1);
        vertical-align: middle;
        border: 1px solid map-get($color, border);
        transition: all 0.2s ease;
        .checked-icon {
          @include pxRem(top, 3);
          @include pxRem(left, 2);
          @include pxRem(stroke-dasharray, 16);
          @include pxRem(stroke-dashoffset, 16);
          position: absolute;
          fill: none;
          stroke: map-get($color, "white");
          stroke-width: 2;
          stroke-linecap: round;
          stroke-linejoin: round;
          transition: all 0.3s ease;
          transition-delay: 0.1s;
          transform: translate3d(0, 0, 0);
        }
        &::before {
          content: "";
          width: 100%;
          height: 100%;
          background-color: map-get($color, "blue");
          display: block;
          transform: scale(0);
          opacity: 1;
          border-radius: 50%;
        }
      }
      &:last-child {
        @include pxRem(padding, 8);
      }
    }
    &:hover {
      span {
        &:first-child {
          border-color: map-get($color, "blue");
        }
      }
    }
  }
}
